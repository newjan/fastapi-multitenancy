"""First revision

Revision ID: 78d702d508d7
Revises: 
Create Date: 2022-07-19 23:28:31.551584

"""
from alembic import op
import sqlalchemy as sa


from tenant.tenant import for_each_tenant_schema


# revision identifiers, used by Alembic.
revision = '78d702d508d7'
down_revision = None
branch_labels = None
depends_on = None


@for_each_tenant_schema
def upgrade(schema: str):
    preparer = sa.sql.compiler.IdentifierPreparer(op.get_bind().dialect)
    schema_quoted = preparer.format_schema(schema)

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='tenant_default'
    )
    op.create_index(op.f('ix_tenant_default_users_id'), 'users', ['id'], unique=False, schema='tenant_default')
    op.create_table('blogs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('body', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['tenant_default.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='tenant_default'
    )
    op.create_index(op.f('ix_tenant_default_blogs_id'), 'blogs', ['id'], unique=False, schema='tenant_default')
    op.drop_index('ix_tenant_users_id', table_name='users', schema='test1')
    op.drop_table('users', schema='test1')
    op.drop_index('ix_tenant_users_id', table_name='users', schema='test2')
    op.drop_table('users', schema='test2')
    op.drop_index('ix_tenant_users_id', table_name='users', schema='newww')
    op.drop_table('users', schema='newww')
    op.drop_index('ix_tenant_blogs_id', table_name='blogs', schema='test1')
    op.drop_table('blogs', schema='test1')
    op.drop_index('ix_tenant_blogs_id', table_name='blogs', schema='test2')
    op.drop_table('blogs', schema='test2')
    op.drop_index('ix_tenant_blogs_id', table_name='blogs', schema='newww')
    op.drop_table('blogs', schema='newww')
    # ### end Alembic commands ###


@for_each_tenant_schema
def downgrade(schema: str):
    preparer = sa.sql.compiler.IdentifierPreparer(op.get_bind().dialect)
    schema_quoted = preparer.format_schema(schema)

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blogs',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('newww.blogs_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('body', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['newww.users.id'], name='blogs_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='blogs_pkey'),
    schema='newww'
    )
    op.create_index('ix_tenant_blogs_id', 'blogs', ['id'], unique=False, schema='newww')
    op.create_table('blogs',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('test2.blogs_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('body', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['test2.users.id'], name='blogs_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='blogs_pkey'),
    schema='test2'
    )
    op.create_index('ix_tenant_blogs_id', 'blogs', ['id'], unique=False, schema='test2')
    op.create_table('blogs',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('test1.blogs_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('body', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['test1.users.id'], name='blogs_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='blogs_pkey'),
    schema='test1'
    )
    op.create_index('ix_tenant_blogs_id', 'blogs', ['id'], unique=False, schema='test1')
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('newww.users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    schema='newww'
    )
    op.create_index('ix_tenant_users_id', 'users', ['id'], unique=False, schema='newww')
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('test2.users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    schema='test2'
    )
    op.create_index('ix_tenant_users_id', 'users', ['id'], unique=False, schema='test2')
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('test1.users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    schema='test1'
    )
    op.create_index('ix_tenant_users_id', 'users', ['id'], unique=False, schema='test1')
    op.drop_index(op.f('ix_tenant_default_blogs_id'), table_name='blogs', schema='tenant_default')
    op.drop_table('blogs', schema='tenant_default')
    op.drop_index(op.f('ix_tenant_default_users_id'), table_name='users', schema='tenant_default')
    op.drop_table('users', schema='tenant_default')
    # ### end Alembic commands ###
